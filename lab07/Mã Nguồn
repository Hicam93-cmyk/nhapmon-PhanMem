import mysql.connector, hashlib

# K·∫øt n·ªëi MySQL
def get_conn():
    return mysql.connector.connect(
        host="localhost",
        user="root",
        password="123456",   # ƒë·ªïi n·∫øu MySQL kh√°c
        database="cms_demo"
    )

# 1. ƒêƒÉng nh·∫≠p
def login_user(username, password):
    conn = get_conn()
    cur = conn.cursor()
    cur.execute("SELECT id, password_hash, role FROM users WHERE username=%s", (username,))
    row = cur.fetchone()
    conn.close()
    if row and row[1] == hashlib.sha256(password.encode()).hexdigest():
        return {"id": row[0], "role": row[2]}
    return None

# 2. Th√™m b√†i vi·∫øt
def add_post(user_id, title, content):
    conn = get_conn()
    cur = conn.cursor()
    try:
        conn.start_transaction()
        cur.execute("INSERT INTO posts(title, content, author_id) VALUES (%s,%s,%s)",
                    (title, content, user_id))
        post_id = cur.lastrowid
        cur.execute("INSERT INTO logs(user_id, action, post_id) VALUES(%s,'ADD_POST',%s)",
                    (user_id, post_id))
        conn.commit()
        print("‚úÖ Post added successfully, ID =", post_id)
    except Exception as e:
        conn.rollback()
        print("Error:", e)
    finally:
        conn.close()

# 3. Duy·ªát b√†i vi·∫øt (ch·ªâ admin)
def approve_post(admin_id, post_id, role):
    conn = get_conn()
    cur = conn.cursor()
    try:
        if role != "admin":
            raise Exception("Permission denied")
        conn.start_transaction()
        cur.execute("UPDATE posts SET status='approved' WHERE id=%s", (post_id,))
        cur.execute("INSERT INTO logs(user_id, action, post_id) VALUES(%s,'APPROVE_POST',%s)",
                    (admin_id, post_id))
        conn.commit()
        print("‚úÖ Post approved successfully")
    except Exception as e:
        conn.rollback()
        print("Error:", e)
    finally:
        conn.close()

# 4. Demo ch·∫°y th·ª≠
if __name__ == "__main__":
    user = login_user("admin", "123456")
    if user:
        print("üîë Login success:", user)
        add_post(user["id"], "Hello CMS", "This is demo content.")
        approve_post(user["id"], 1, user["role"])
    else:
        print("‚ùå Login failed")
CREATE DATABASE cms_demo;
USE cms_demo;

CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50),
    password_hash VARCHAR(64),
    role VARCHAR(20)
);

CREATE TABLE posts (
    id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255),
    content TEXT,
    status VARCHAR(20) DEFAULT 'pending',
    author_id INT,
    FOREIGN KEY (author_id) REFERENCES users(id)
);

CREATE TABLE logs (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    action VARCHAR(50),
    post_id INT,
    time TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- User admin m·∫´u
INSERT INTO users(username,password_hash,role)
VALUES('admin', SHA2('123456',256), 'admin');
